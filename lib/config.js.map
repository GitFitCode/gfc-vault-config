{"version":3,"file":"config.js","sourceRoot":"/","sources":["config.ts"],"names":[],"mappings":"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","sourcesContent":["import convict = require('convict');\n\nimport dotEnv = require('dotenv');\n\ndotEnv.config();\n\nexport interface Config {\n  env: string;\n  discordBotToken: string;\n  botId: string;\n  gfcIntroSurveyLink: string;\n  admin1DiscordId: string;\n  admin2DiscordId: string;\n  generalChatChannelId: string;\n  checkinsVoiceChannelId: string;\n  notionBacklogDatabaseLink: string;\n  virtualOfficeVoiceChannelId: string;\n  firstRespondersRoleId: string;\n  notionKey: string;\n  notionSupportTicketsDatabaseId: string;\n  notionSupportTicketsDatabaseStatusId: string;\n  notionSupportTicketsDatabaseLink: string;\n  githubPersonalAccessToken: string;\n  limitMaxConcurrent: string;\n  logLevel: string;\n  port: string;\n  discordServerID: string;\n  notionRetroDatabaseId: string;\n  sentryDSN: string;\n  adminRoleID: string;\n  notionBacklogDatabaseId: string;\n  openAIApiKey: string;\n  supabaseURL: string;\n  supabaseAnonKey: string;\n}\n\nexport type ConfigurationSchema = {\n  env: {\n    format: string[] | string;\n    default: string;\n    env: string;\n    arg: string;\n  };\n  discordBotToken: {\n    format: string;\n    default: string;\n    env: string;\n    arg: string;\n  };\n  botId: {\n    format: string;\n    default: string;\n    env: string;\n    arg: string;\n  };\n  gfcIntroSurveyLink: {\n    format: string;\n    default: string;\n    env: string;\n    arg: string;\n  };\n  admin1DiscordId: {\n    format: string;\n    default: string;\n    env: string;\n    arg: string;\n  };\n  admin2DiscordId: {\n    format: string;\n    default: string;\n    env: string;\n    arg: string;\n  };\n  generalChatChannelId: {\n    format: string;\n    default: string;\n    env: string;\n    arg: string;\n  };\n  checkinsVoiceChannelId: {\n    format: string;\n    default: string;\n    env: string;\n    arg: string;\n  };\n  virtualOfficeVoiceChannelId: {\n    format: string;\n    default: string;\n    env: string;\n    arg: string;\n  };\n  firstRespondersRoleId: {\n    format: string;\n    default: string;\n    env: string;\n    arg: string;\n  };\n  notionKey: {\n    format: string;\n    default: string;\n    env: string;\n    arg: string;\n  };\n  notionSupportTicketsDatabaseId: {\n    format: string;\n    default: string;\n    env: string;\n    arg: string;\n  };\n  notionSupportTicketsDatabaseStatusId: {\n    format: string;\n    default: string;\n    env: string;\n    arg: string;\n  };\n  notionSupportTicketsDatabaseLink: {\n    format: string;\n    default: string;\n    env: string;\n    arg: string;\n  };\n  githubPersonalAccessToken: {\n    format: string;\n    default: string;\n    env: string;\n    arg: string;\n  };\n  limitMaxConcurrent: {\n    format: string;\n    default: string;\n    env: string;\n    arg: string;\n  };\n  logLevel: {\n    format: string;\n    default: string;\n    env: string;\n    arg: string;\n  };\n  port: {\n    format: string;\n    default: string;\n    env: string;\n    arg: string;\n  };\n  discordServerID: {\n    format: string;\n    default: string;\n    env: string;\n    arg: string;\n  };\n  notionRetroDatabaseId: {\n    format: string;\n    default: string;\n    env: string;\n    arg: string;\n  };\n  sentryDSN: {\n    format: string;\n    default: string;\n    env: string;\n    arg: string;\n  };\n  adminRoleID: {\n    format: string;\n    default: string;\n    env: string;\n    arg: string;\n  };\n  notionBacklogDatabaseId: {\n    format: string;\n    default: string;\n    env: string;\n    arg: string;\n  };\n  notionBacklogDatabaseLink: {\n    format: string;\n    default: string;\n    env: string;\n    arg: string;\n  };\n  openAIApiKey: {\n    format: string;\n    default: string;\n    env: string;\n    arg: string;\n  };\n  supabaseURL: {\n    format: string;\n    default: string;\n    env: string;\n    arg: string;\n  };\n  supabaseAnonKey: {\n    format: string;\n    default: string;\n    env: string;\n    arg: string;\n  };\n} & convict.SchemaObj<Config>;\n\nconst configuration: convict.Config<Config> | ConfigurationSchema = convict({\n  env: {\n    format: ['prod', 'dev', 'staging', 'qa', 'local', 'ci'],\n    default: 'dev',\n    arg: 'nodeEnv',\n    env: 'NODE_ENV',\n  },\n  discordBotToken: {\n    format: String,\n    default: 'from default',\n    arg: 'discordBotToken',\n    env: 'DISCORD_BOT_TOKEN',\n  },\n  botId: {\n    format: String,\n    default: 'from default',\n    arg: 'botId',\n    env: 'BOT_ID',\n  },\n  gfcIntroSurveyLink: {\n    format: String,\n    default: 'from default',\n    arg: 'gfcIntroSurveyLink',\n    env: 'GFC_INTRO_SURVEY_LINK',\n  },\n  admin1DiscordId: {\n    format: String,\n    default: 'from default',\n    arg: 'admin1DiscordId',\n    env: 'ADMIN_1_DISCORD_ID',\n  },\n  admin2DiscordId: {\n    format: String,\n    default: 'from default',\n    arg: 'admin2DiscordId',\n    env: 'ADMIN_2_DISCORD_ID',\n  },\n  generalChatChannelId: {\n    format: String,\n    default: 'from default',\n    arg: 'generalChatChannelId',\n    env: 'GENERAL_CHAT_CHANNEL_ID',\n  },\n  checkinsVoiceChannelId: {\n    format: String,\n    default: 'from default',\n    arg: 'checkinsVoiceChannelId',\n    env: 'CHECKINS_VOICE_CHANNEL_ID',\n  },\n  virtualOfficeVoiceChannelId: {\n    format: String,\n    default: 'from default',\n    arg: 'virtualOfficeVoiceChannelId',\n    env: 'VIRTUAL_OFFICE_VOICE_CHANNEL_ID',\n  },\n  firstRespondersRoleId: {\n    format: String,\n    default: 'from default',\n    arg: 'firstRespondersRoleId',\n    env: 'FIRST_RESPONDERS_ROLE_ID',\n  },\n  notionKey: {\n    format: String,\n    default: 'from default',\n    arg: 'notionKey',\n    env: 'NOTION_KEY',\n  },\n  notionSupportTicketsDatabaseId: {\n    format: String,\n    default: 'from default',\n    arg: 'notionSupportTicketsDatabaseId',\n    env: 'NOTION_SUPPORT_TICKETS_DATABASE_ID',\n  },\n  notionSupportTicketsDatabaseStatusId: {\n    format: String,\n    default: 'from default',\n    arg: 'notionSupportTicketsDatabaseStatusId',\n    env: 'NOTION_SUPPORT_TICKETS_DATABASE_STATUS_ID',\n  },\n  notionSupportTicketsDatabaseLink: {\n    format: String,\n    default: 'from default',\n    arg: 'notionSupportTicketsDatabaseLink',\n    env: 'NOTION_SUPPORT_TICKETS_DATABASE_LINK',\n  },\n  githubPersonalAccessToken: {\n    format: String,\n    default: 'from default',\n    arg: 'githubPersonalAccessToken',\n    env: 'GITHUB_PERSON_ACCESS_TOKEN',\n  },\n  limitMaxConcurrent: {\n    format: Number,\n    default: 'from default',\n    arg: 'limitMaxConcurrent',\n    env: 'LIMIT_MAX_CONCURRENT',\n  },\n  logLevel: {\n    format: String,\n    default: 'from default',\n    arg: 'logLevel',\n    env: 'LOG_LEVEL',\n  },\n  port: {\n    format: Number,\n    default: 'from default',\n    arg: 'port',\n    env: 'PORT',\n  },\n  discordServerID: {\n    format: String,\n    default: 'from default',\n    arg: 'discordServerID',\n    env: 'DISCORD_SERVER_ID',\n  },\n  notionRetroDatabaseId: {\n    format: String,\n    default: 'from default',\n    arg: 'notionRetroDatabaseId',\n    env: 'NOTION_RETRO_DATABASE_ID',\n  },\n  sentryDSN: {\n    format: String,\n    default: 'from default',\n    arg: 'sentryDSN',\n    env: 'SENTRY_DSN',\n  },\n  adminRoleID: {\n    format: String,\n    default: 'from default',\n    arg: 'adminRoleID',\n    env: 'ADMIN_ROLE_ID',\n  },\n  notionBacklogDatabaseId: {\n    format: String,\n    default: 'from default',\n    arg: 'notionBacklogDatabaseId',\n    env: 'NOTION_BACKLOG_DATABASE_ID',\n  },\n  notionBacklogDatabaseLink: {\n    format: String,\n    default: 'from default',\n    arg: 'notionBacklogDatabaseLink',\n    env: 'NOTION_BACKLOG_DATABASE_LINK',\n  },\n  openAIApiKey: {\n    format: String,\n    default: 'from default',\n    arg: 'openAIApiKey',\n    env: 'OPENAI_API_KEY',\n  },\n  supabaseURL: {\n    format: String,\n    default: 'from default',\n    arg: 'supabaseURL',\n    env: 'SUPABASE_URL',\n  },\n  supabaseAnonKey: {\n    format: String,\n    default: 'from default',\n    arg: 'supabaseAnonKey',\n    env: 'SUPABASE_ANON_KEY',\n  },\n});\n\n// Lets ensure we are respecting our config schema.\nconfiguration.validate({\n  allowed: 'strict',\n});\n\n// Convict object has a lot going on so lets just get a simple js object instead.\nexport function getConfig(): Config {\n  return configuration.getProperties();\n}\n\nexport const config = getConfig();\n"]}